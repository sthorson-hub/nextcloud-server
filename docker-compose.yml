version: "3.8"

networks:
  proxy:
    driver: bridge

volumes:
  nextcloud_data:
  nextcloud_db:

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    networks:
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    healthcheck:
      test: ["CMD", "traefik", "version"]
      interval: 30s
      timeout: 10s
      retries: 5

  nextcloud-db:
    image: postgres:15
    container_name: nextcloud-db
    restart: unless-stopped
    networks:
      - proxy
    environment:
      POSTGRES_DB: ${NC_DB:-nextcloud}
      POSTGRES_USER: ${NC_DB_USER:-nextcloud}
      POSTGRES_PASSWORD: ${NC_DB_PASS:?set_in_env}
    volumes:
      - nextcloud_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${NC_DB_USER:-nextcloud}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Apache variant exposes HTTP so Traefik/Cloudflared can speak to it
  nextcloud-app:
    image: nextcloud:28-apache
    container_name: nextcloud-app
    restart: unless-stopped
    depends_on:
      - nextcloud-db
    networks:
      - proxy
    environment:
      POSTGRES_HOST: nextcloud-db
      POSTGRES_DB: ${NC_DB:-nextcloud}
      POSTGRES_USER: ${NC_DB_USER:-nextcloud}
      POSTGRES_PASSWORD: ${NC_DB_PASS:?set_in_env}
    volumes:
      - nextcloud_data:/var/www/html
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost/ >/dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      traefik.enable: "true"
      traefik.http.routers.nextcloud.rule: "Host(`${NEXTCLOUD_HOST:?set_in_env}`)"
      traefik.http.routers.nextcloud.entrypoints: "web"
      traefik.http.services.nextcloud.loadbalancer.server.port: "80"

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: always
    depends_on:
      - traefik
    networks:
      - proxy
    # Mount repo folder (read-only) into /etc/cloudflared in the container
    volumes:
      - ./cloudflared:/etc/cloudflared:ro
    # Explicit array form avoids entrypoint parsing quirks
    command: ["tunnel", "--config", "/etc/cloudflared/config.yml", "--no-autoupdate", "run"]
    healthcheck:
      test: ["CMD", "cloudflared", "version"]
      interval: 30s
      timeout: 10s
      retries: 3
